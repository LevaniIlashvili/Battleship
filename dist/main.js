(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n}\n\n.header {\n    font-size: 40px;\n    font-weight: 500;\n    margin-top: 20px;\n}\n\n.wrapper {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 80px;\n}\n\n.game-wrapper {\n    display: flex;\n    gap: 100px;\n}\n\n.x {\n    display: flex;\n}\n\n.y {\n    box-sizing: border-box;\n    border: solid 1px rgb(78, 77, 77);\n    cursor: pointer;\n}\n\n.modal {\n    display: none; \n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%; \n    overflow: auto;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0, 0, 0, 0.616);\n}\n\n.modal-content {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 70px;\n    background-color: #fefefe;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 30%;\n    height: 30%;\n    border-radius: 10px;\n}\n\n.win {\n    font-size: 40px;\n    margin-top: 20px;\n    font-weight: 600;\n}\n\n.play-again {\n    padding: 15px 0px;\n    background-color: black;\n    color: white;\n    font-weight: 600;\n    font-size: 20px;\n    border: none;\n    border-radius: 10px;\n    width: 200px;\n    cursor: pointer;\n}\n\n.play-again:hover {\n    transform: scale(1.05);\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,aAAa;IACb,UAAU;AACd;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,sBAAsB;IACtB,iCAAiC;IACjC,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,UAAU;IACV,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,cAAc;IACd,4BAA4B;IAC5B,sCAAsC;AAC1C;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;IACjB,uBAAuB;IACvB,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,mBAAmB;IACnB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,sBAAsB;AAC1B",sourcesContent:["* {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n}\n\n.header {\n    font-size: 40px;\n    font-weight: 500;\n    margin-top: 20px;\n}\n\n.wrapper {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 80px;\n}\n\n.game-wrapper {\n    display: flex;\n    gap: 100px;\n}\n\n.x {\n    display: flex;\n}\n\n.y {\n    box-sizing: border-box;\n    border: solid 1px rgb(78, 77, 77);\n    cursor: pointer;\n}\n\n.modal {\n    display: none; \n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%; \n    overflow: auto;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0, 0, 0, 0.616);\n}\n\n.modal-content {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 70px;\n    background-color: #fefefe;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 30%;\n    height: 30%;\n    border-radius: 10px;\n}\n\n.win {\n    font-size: 40px;\n    margin-top: 20px;\n    font-weight: 600;\n}\n\n.play-again {\n    padding: 15px 0px;\n    background-color: black;\n    color: white;\n    font-weight: 600;\n    font-size: 20px;\n    border: none;\n    border-radius: 10px;\n    width: 200px;\n    cursor: pointer;\n}\n\n.play-again:hover {\n    transform: scale(1.05);\n}"],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<n.length;l++){var p=[].concat(n[l]);r&&i[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],l=r.base?c[0]+r.base:c[0],p=a[l]||0,d="".concat(l," ").concat(p);a[l]=p+1;var u=t(d),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(A);else{var h=o(A,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=r(n,o),l=0;l<a.length;l++){var p=t(a[l]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},380:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(380),o=t.n(r),a=t(569),i=t.n(a),s=t(565),c=t.n(s),l=t(216),p=t.n(l),d=t(589),u=t.n(d),A=t(426),h={};function m(n,e){this.length=n,this.name=e,this.hit=[],this.hitF=(n,e)=>{const t=[n,e];return this.hit.push(t),this.hit},this.isSunk=()=>n===this.hit.length}function f(){const n=[];for(let e=0;e<10;e+=1){const e=[];n.push(e);for(let n=0;n<10;n+=1){const n=[];e.push(n)}}return n}function g(){this.board=f(),this.computerBoard=f(),this.placeShip=(n,e,t,r,o,a)=>{const i=new m(n,e);return"carrier"===e?"horizontal"===a?(o[t][r].push(i),o[t][r+1].push(i),o[t][r+2].push(i),o[t][r+3].push(i),o[t][r+4].push(i)):(o[t][r].push(i),o[t+1][r].push(i),o[t+2][r].push(i),o[t+3][r].push(i),o[t+4][r].push(i)):"battleship"===e?"horizontal"===a?(o[t][r].push(i),o[t][r+1].push(i),o[t][r+2].push(i),o[t][r+3].push(i)):(o[t][r].push(i),o[t+1][r].push(i),o[t+2][r].push(i),o[t+3][r].push(i)):"cruiser"===e||"submarine"===e?"horizontal"===a?(o[t][r].push(i),o[t][r+1].push(i),o[t][r+2].push(i)):(o[t][r].push(i),o[t+1][r].push(i),o[t+2][r].push(i)):"destroyer"===e&&("horizontal"===a?(o[t][r].push(i),o[t][r+1].push(i)):(o[t][r].push(i),o[t+1][r].push(i))),o},this.reciveAttack=(n,e,t)=>(!t[n][e].includes("miss")&&t[n][e].length?t[n][e][0].hitF(n,e):t[n][e].length||t[n][e].push("miss"),t),this.randomizeComputerBoard=()=>{this.placeShip(5,"carrier",1,2,this.computerBoard,"horizontal"),this.placeShip(4,"battleship",4,6,this.computerBoard,"horizontal"),this.placeShip(3,"cruiser",7,2,this.computerBoard,"horizontal"),this.placeShip(3,"submarine",7,6,this.computerBoard,"vertical"),this.placeShip(2,"destroyer",4,1,this.computerBoard,"vertical")}}h.styleTagTransform=u(),h.setAttributes=c(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=p(),e()(A.Z,h),A.Z&&A.Z.locals&&A.Z.locals;const y=new g;function b(){this.turn="player",this.x=Math.floor(10*Math.random()),this.y=Math.floor(10*Math.random()),this.computerRandomAttack=n=>{this.turn="computer",console.log(this.x,this.y),y.reciveAttack(this.x,this.y,n)}}function x(n){for(let e=0;e<10;e+=1){const t=document.createElement("div");t.classList.add("x"),t.style.width="350px",t.style.height="35px",document.querySelector(`.${n}`).appendChild(t);for(let r=0;r<10;r+=1){const o=document.createElement("div");o.classList.add("y"),o.classList.add(`${n}`),o.setAttribute("id",`${n}${0+e},${0+r}`),o.style.width="35px",o.style.height="35px",t.appendChild(o)}}}x("player"),x("computer");const C=new g;C.placeShip(5,"carrier",1,2,C.board,"horizontal"),C.placeShip(4,"battleship",7,3,C.board,"horizontal"),C.placeShip(3,"cruiser",4,7,C.board,"horizontal"),C.placeShip(3,"submarine",5,1,C.board,"vertical"),C.placeShip(2,"destroyer",3,5,C.board,"vertical"),C.board.forEach((n=>{n.forEach((e=>{e.length&&(document.getElementById(`player${C.board.indexOf(n)},${n.indexOf(e)}`).style.backgroundColor="gray")}))}));const B=new g;function I(){let n=new b,e=C.board[n.x][n.y],t=document.getElementById(`player${n.x},${n.y}`);if(e.includes("miss")||!e.length||e[0].hit.find((e=>e.includes(n.x)&&e.includes(n.y))))if(e.includes("miss")||e.length){let r;for("miss"!==e[0]&&(r=e[0].hit.find((e=>e.includes(n.x)&&e.includes(n.y))));e.length&&e.includes("miss")||e.length&&r;)n=new b,e=C.board[n.x][n.y],!e.includes("miss")&&e.length&&(r=e[0].hit.find((e=>e.includes(n.x)&&e.includes(n.y))));t=document.getElementById(`player${n.x},${n.y}`),!e.includes("miss")&&e.length?(t.style.backgroundColor="rgb(255, 133, 133)",n.computerRandomAttack(C.board)):e.includes("miss")||e.length||(t.style.backgroundColor="rgb(133, 255, 179)",n.computerRandomAttack(C.board))}else t.style.backgroundColor="rgb(133, 255, 179)",n.computerRandomAttack(C.board);else t.style.backgroundColor="rgb(255, 133, 133)",n.computerRandomAttack(C.board)}function v(n,e,t){let r,o,a,i,s;if(n[`${[e]}`].forEach((n=>{n.forEach((n=>{n.length&&!n.includes("miss")&&("carrier"===n[0].name&&!0===n[0].isSunk()?r=!0:"battleship"===n[0].name&&!0===n[0].isSunk()?o=!0:"cruiser"===n[0].name&&!0===n[0].isSunk()?a=!0:"submarine"===n[0].name&&!0===n[0].isSunk()?i=!0:"destroyer"===n[0].name&&!0===n[0].isSunk()&&(s=!0))}))})),r&&o&&a&&i&&s){const n=document.querySelector(".win"),e=document.querySelector(".modal");n.textContent="player"===t?"You Win":"Computer Wins",e.style.display="block"}}B.randomizeComputerBoard(),B.computerBoard.forEach((n=>{n.forEach((e=>{e.length&&(document.getElementById(`computer${B.computerBoard.indexOf(n)},${n.indexOf(e)}`).style.backgroundColor="gray");const t=B.computerBoard.indexOf(n),r=n.indexOf(e),o=document.getElementById(`computer${t},${r}`);o.addEventListener("click",(()=>{e.includes("miss")||!e.length||e[0].hit.find((n=>n.includes(t)&&n.includes(r)))?e.includes("miss")||e.length||(o.style.backgroundColor="rgb(133, 255, 179)",B.reciveAttack(t,r,B.computerBoard),v(B,"computerBoard","player"),I(),v(C,"board","computer")):(o.style.backgroundColor="rgb(255, 133, 133",B.reciveAttack(t,r,B.computerBoard),v(B,"computerBoard","player"),e[0].isSunk()&&B.computerBoard.forEach((n=>{n.forEach((e=>{!e.includes("miss")&&e.length&&e[0].isSunk()&&(document.getElementById(`computer${B.computerBoard.indexOf(n)},${n.indexOf(e)}`).style.backgroundColor="gray")}))})),I(),v(C,"board","computer"))}))}))})),document.querySelector(".play-again").addEventListener("click",(()=>{location.reload()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,