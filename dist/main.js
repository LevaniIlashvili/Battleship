(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'* {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n}\n\n.header {\n    font-size: 35px;\n    color: rgb(51, 50, 50);\n    font-weight: 500;\n    margin-top: 20px;\n    font-family: "Press Start 2P";\n    letter-spacing: -3px;\n}\n\n.wrapper {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 100px;\n}\n\n.game-wrapper {\n    display: flex;\n    gap: 100px;\n}\n\n.x {\n    display: flex;\n}\n\n.y {\n    box-sizing: border-box;\n    border: solid 1px rgb(78, 77, 77);\n    cursor: pointer;\n}\n\n.modal {\n    display: none; \n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%; \n    overflow: auto;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0, 0, 0, 0.616);\n}\n\n.modal-content {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 70px;\n    background-color: #fefefe;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 30%;\n    height: 30%;\n    border-radius: 10px;\n}\n\n.win {\n    font-size: 40px;\n    margin-top: 20px;\n    font-weight: 600;\n}\n\n.play-again {\n    padding: 15px 0px;\n    background-color: black;\n    color: white;\n    font-weight: 600;\n    font-size: 20px;\n    border: none;\n    border-radius: 10px;\n    width: 200px;\n    cursor: pointer;\n}\n\n.play-again:hover {\n    transform: scale(1.05);\n}\n\n\n.place-ships-modal {\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%; \n    overflow: auto;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0, 0, 0, 0.616);\n}\n\n.place-ships-modal-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: #fefefe;\n    margin: 5% auto;\n    width: 700px;\n    height: 500px;\n    border-radius: 5px;\n    padding: 10px;\n}\n\n.ships {\n    height: 200px;\n    width: 200px;\n    display: flex;\n    gap: 10px;\n    flex-wrap: wrap;\n}\n\n.ship-placer-wrapper {\n    display: flex;\n    gap: 50px;\n    margin-bottom: 20px;\n}\n\n.ship-placer-header {\n    font-family: "Press Start 2P";\n    font-size: 15px;\n    margin-bottom: 30px;\n    margin-top: 15px;\n    text-align: center;\n}\n\n.carrier, .battleship, .cruiser, .submarine, .destroyer {\n    width: 175px;\n    height: 35px;\n    display: flex;\n}\n\n.battleship {\n    width: 135px;\n}\n\n.cruiser, .submarine {\n    width: 105px;\n}\n\n.destroyer {\n    width: 70px;\n}\n\n.ship-squares {\n    border: solid 1px black;\n    width: 35px;\n    height: 35px;\n    box-sizing: border-box;\n    background-color: rgb(163, 163, 163);\n    cursor: pointer;\n}\n\n.drag-over {\n    background-color: rgb(133, 255, 179);\n}\n\n.hide {\n    display: none;\n}\n\n.place-x {\n    display: flex;\n}\n\n.place-y {\n    box-sizing: border-box;\n    border: solid 1px rgb(78, 77, 77);\n    cursor: pointer;\n}\n\n.start {\n    width: 150px;\n    height: 35px;\n    background-color: black;\n    color: white;\n    border: none;\n    font-size: 10px;\n    font-family: "Press Start 2P";\n    border-radius: 5px;\n}\n\n.start:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,sBAAsB;IACtB,gBAAgB;IAChB,gBAAgB;IAChB,6BAA6B;IAC7B,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,aAAa;IACb,UAAU;AACd;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,sBAAsB;IACtB,iCAAiC;IACjC,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,UAAU;IACV,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,cAAc;IACd,4BAA4B;IAC5B,sCAAsC;AAC1C;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;IACjB,uBAAuB;IACvB,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,mBAAmB;IACnB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,sBAAsB;AAC1B;;;AAGA;IACI,eAAe;IACf,UAAU;IACV,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,cAAc;IACd,4BAA4B;IAC5B,sCAAsC;AAC1C;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,yBAAyB;IACzB,eAAe;IACf,YAAY;IACZ,aAAa;IACb,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,YAAY;IACZ,aAAa;IACb,SAAS;IACT,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;AACvB;;AAEA;IACI,6BAA6B;IAC7B,eAAe;IACf,mBAAmB;IACnB,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,YAAY;AAChB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,uBAAuB;IACvB,WAAW;IACX,YAAY;IACZ,sBAAsB;IACtB,oCAAoC;IACpC,eAAe;AACnB;;AAEA;IACI,oCAAoC;AACxC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,sBAAsB;IACtB,iCAAiC;IACjC,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,YAAY;IACZ,uBAAuB;IACvB,YAAY;IACZ,YAAY;IACZ,eAAe;IACf,6BAA6B;IAC7B,kBAAkB;AACtB;;AAEA;IACI,eAAe;IACf,sBAAsB;AAC1B",sourcesContent:['* {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n}\n\n.header {\n    font-size: 35px;\n    color: rgb(51, 50, 50);\n    font-weight: 500;\n    margin-top: 20px;\n    font-family: "Press Start 2P";\n    letter-spacing: -3px;\n}\n\n.wrapper {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 100px;\n}\n\n.game-wrapper {\n    display: flex;\n    gap: 100px;\n}\n\n.x {\n    display: flex;\n}\n\n.y {\n    box-sizing: border-box;\n    border: solid 1px rgb(78, 77, 77);\n    cursor: pointer;\n}\n\n.modal {\n    display: none; \n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%; \n    overflow: auto;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0, 0, 0, 0.616);\n}\n\n.modal-content {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 70px;\n    background-color: #fefefe;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 30%;\n    height: 30%;\n    border-radius: 10px;\n}\n\n.win {\n    font-size: 40px;\n    margin-top: 20px;\n    font-weight: 600;\n}\n\n.play-again {\n    padding: 15px 0px;\n    background-color: black;\n    color: white;\n    font-weight: 600;\n    font-size: 20px;\n    border: none;\n    border-radius: 10px;\n    width: 200px;\n    cursor: pointer;\n}\n\n.play-again:hover {\n    transform: scale(1.05);\n}\n\n\n.place-ships-modal {\n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%; \n    overflow: auto;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0, 0, 0, 0.616);\n}\n\n.place-ships-modal-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    background-color: #fefefe;\n    margin: 5% auto;\n    width: 700px;\n    height: 500px;\n    border-radius: 5px;\n    padding: 10px;\n}\n\n.ships {\n    height: 200px;\n    width: 200px;\n    display: flex;\n    gap: 10px;\n    flex-wrap: wrap;\n}\n\n.ship-placer-wrapper {\n    display: flex;\n    gap: 50px;\n    margin-bottom: 20px;\n}\n\n.ship-placer-header {\n    font-family: "Press Start 2P";\n    font-size: 15px;\n    margin-bottom: 30px;\n    margin-top: 15px;\n    text-align: center;\n}\n\n.carrier, .battleship, .cruiser, .submarine, .destroyer {\n    width: 175px;\n    height: 35px;\n    display: flex;\n}\n\n.battleship {\n    width: 135px;\n}\n\n.cruiser, .submarine {\n    width: 105px;\n}\n\n.destroyer {\n    width: 70px;\n}\n\n.ship-squares {\n    border: solid 1px black;\n    width: 35px;\n    height: 35px;\n    box-sizing: border-box;\n    background-color: rgb(163, 163, 163);\n    cursor: pointer;\n}\n\n.drag-over {\n    background-color: rgb(133, 255, 179);\n}\n\n.hide {\n    display: none;\n}\n\n.place-x {\n    display: flex;\n}\n\n.place-y {\n    box-sizing: border-box;\n    border: solid 1px rgb(78, 77, 77);\n    cursor: pointer;\n}\n\n.start {\n    width: 150px;\n    height: 35px;\n    background-color: black;\n    color: white;\n    border: none;\n    font-size: 10px;\n    font-family: "Press Start 2P";\n    border-radius: 5px;\n}\n\n.start:hover {\n    cursor: pointer;\n    transform: scale(1.03);\n}'],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var d=this[s][0];null!=d&&(i[d]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);r&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var d=n[s],l=r.base?d[0]+r.base:d[0],c=a[l]||0,A="".concat(l," ").concat(c);a[l]=c+1;var p=t(A),h={css:d[1],media:d[2],sourceMap:d[3],supports:d[4],layer:d[5]};if(-1!==p)e[p].references++,e[p].updater(h);else{var u=o(h,r);r.byIndex=s,e.splice(s,0,{identifier:A,updater:u,references:1})}i.push(A)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var d=r(n,o),l=0;l<a.length;l++){var c=t(a[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=d}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},380:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(380),o=t.n(r),a=t(569),i=t.n(a),s=t(565),d=t.n(s),l=t(216),c=t.n(l),A=t(589),p=t.n(A),h=t(426),u={};function m(n,e){this.length=n,this.name=e,this.hit=[],this.hitF=(n,e)=>{const t=[n,e];return this.hit.push(t),this.hit},this.isSunk=()=>n===this.hit.length}function g(){const n=[];for(let e=0;e<10;e+=1){const e=[];n.push(e);for(let n=0;n<10;n+=1){const n=[];e.push(n)}}return n}function f(){this.board=g(),this.computerBoard=g(),this.placeShip=(n,e,t,r,o,a)=>{const i=new m(n,e);return"carrier"===e?"horizontal"===a?(o[t][r].push(i),o[t][r+1].push(i),o[t][r+2].push(i),o[t][r+3].push(i),o[t][r+4].push(i)):(o[t][r].push(i),o[t+1][r].push(i),o[t+2][r].push(i),o[t+3][r].push(i),o[t+4][r].push(i)):"battleship"===e?"horizontal"===a?(o[t][r].push(i),o[t][r+1].push(i),o[t][r+2].push(i),o[t][r+3].push(i)):(o[t][r].push(i),o[t+1][r].push(i),o[t+2][r].push(i),o[t+3][r].push(i)):"cruiser"===e||"submarine"===e?"horizontal"===a?(o[t][r].push(i),o[t][r+1].push(i),o[t][r+2].push(i)):(o[t][r].push(i),o[t+1][r].push(i),o[t+2][r].push(i)):"destroyer"===e&&("horizontal"===a?(o[t][r].push(i),o[t][r+1].push(i)):(o[t][r].push(i),o[t+1][r].push(i))),o},this.reciveAttack=(n,e,t)=>(!t[n][e].includes("miss")&&t[n][e].length?t[n][e][0].hitF(n,e):t[n][e].length||t[n][e].push("miss"),t),this.randomizeComputerBoard=()=>{const n=["horizontal","vertical"];let e=Math.floor(2*Math.random()),t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());if("horizontal"===n[e])for(;r>5;)t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());else for(;t>5;)t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());if(this.placeShip(5,"carrier",t,r,this.computerBoard,n[e]),e=Math.floor(2*Math.random()),t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),"horizontal"===n[e])for(;r>4||this.computerBoard[t][r].length||this.computerBoard[t][r+1].length||this.computerBoard[t][r+2].length||this.computerBoard[t][r+3].length||this.computerBoard[t][r+4].length;)t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());else for(;t>4||this.computerBoard[t][r].length||this.computerBoard[t+1][r].length||this.computerBoard[t+2][r].length||this.computerBoard[t+3][r].length;)t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());if(this.placeShip(4,"battleship",t,r,this.computerBoard,n[e]),e=Math.floor(2*Math.random()),t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random()),"horizontal"===n[e])for(;r>3||this.computerBoard[t][r].length||this.computerBoard[t][r+1].length||this.computerBoard[t][r+2].length;)t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());else for(;t>3||this.computerBoard[t][r].length||this.computerBoard[t+1][r].length||this.computerBoard[t+2][r].length;)t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());if(this.placeShip(3,"cruiser",t,r,this.computerBoard,n[e]),"horizontal"===n[e])for(;r>3||this.computerBoard[t][r].length||this.computerBoard[t][r+1].length||this.computerBoard[t][r+2].length;)t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());else for(;t>3||this.computerBoard[t][r].length||this.computerBoard[t+1][r].length||this.computerBoard[t+2][r].length;)t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());if(this.placeShip(3,"submarine",t,r,this.computerBoard,n[e]),"horizontal"===n[e])for(;r>2||this.computerBoard[t][r].length||this.computerBoard[t][r+1].length;)t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());else for(;t>2||this.computerBoard[t][r].length||this.computerBoard[t+1][r].length;)t=Math.floor(10*Math.random()),r=Math.floor(10*Math.random());this.placeShip(2,"destroyer",t,r,this.computerBoard,n[e])}}u.styleTagTransform=p(),u.setAttributes=d(),u.insert=i().bind(null,"head"),u.domAPI=o(),u.insertStyleElement=c(),e()(h.Z,u),h.Z&&h.Z.locals&&h.Z.locals;const x=new f;function b(){this.turn="player",this.x=Math.floor(10*Math.random()),this.y=Math.floor(10*Math.random()),console.log(this.x,this.y),this.computerRandomAttack=n=>{this.turn="computer",x.reciveAttack(this.x,this.y,n)}}function C(n){for(let e=0;e<10;e+=1){const t=document.createElement("div");t.classList.add("x"),t.style.width="350px",t.style.height="35px",document.querySelector(`.${n}`).appendChild(t);for(let r=0;r<10;r+=1){const o=document.createElement("div");o.classList.add("y"),o.classList.add(`${n}`),o.setAttribute("id",`${n}${0+e},${0+r}`),o.style.width="35px",o.style.height="35px",t.appendChild(o)}}}C("player"),C("computer");const B=new f;!function(){for(let n=0;n<10;n+=1){const e=document.createElement("div");e.classList.add("place-x"),e.style.width="350px",e.style.height="35px",document.querySelector(".modal-board").appendChild(e);for(let t=0;t<10;t+=1){const r=document.createElement("div");r.classList.add("place-y"),r.setAttribute("id",`${0+n},${0+t}`),r.style.width="35px",r.style.height="35px",e.appendChild(r)}}}();const y=document.querySelectorAll(".ship"),I=document.querySelectorAll(".place-y");y.forEach((n=>{n.addEventListener("dragstart",(n=>{n.dataTransfer.setData("text/plain",n.target.id)})),n.addEventListener("dblclick",(()=>{n.classList.contains("vertical")?n.classList.contains("vertical")&&(n.style.flexDirection="row",n.classList.remove("vertical"),n.classList.add("horizontal"),"carrier"===n.id?(n.style.height="35px",n.style.width="175px"):"battleship"===n.id?(n.style.height="35px",n.style.width="140px"):"cruiser"===n.id||"submarine"===n.id?(n.style.height="35px",n.style.width="105px"):"destroyer"===n.id&&(n.style.height="35px",n.style.width="70  px")):(n.style.flexDirection="column",n.classList.remove("horizontal"),n.classList.add("vertical"),"carrier"===n.id?(n.style.height="175px",n.style.width="35px"):"battleship"===n.id?(n.style.height="140px",n.style.width="35px"):"cruiser"===n.id||"submarine"===n.id?(n.style.height="105px",n.style.width="35px"):"destroyer"===n.id&&(n.style.height="70px",n.style.width="35px"))}))})),I.forEach((n=>{n.addEventListener("dragenter",(n=>{n.target.classList.add("drag-over"),n.preventDefault()})),n.addEventListener("dragover",(n=>{n.target.classList.add("drag-over"),n.preventDefault()})),n.addEventListener("dragleave",(n=>{n.target.classList.remove("drag-over")})),n.addEventListener("drop",(n=>{n.target.classList.remove("drag-over");const e=n.dataTransfer.getData("text/plain"),t=document.getElementById(e);if("place-y"===n.target.classList.value){const e=parseInt(n.target.id.slice(0,1),10),r=parseInt(n.target.id.slice(2),10);t.classList.contains("horizontal")?"carrier"===t.id&&B.board[0][r+4]?(n.target.appendChild(t),B.placeShip(5,"carrier",e,r,B.board,"horizontal")):"battleship"===t.id&&B.board[0][r+3]?(n.target.appendChild(t),B.placeShip(4,"battleship",e,r,B.board,"horizontal")):"cruiser"===t.id&&B.board[0][r+2]?(n.target.appendChild(t),B.placeShip(3,"cruiser",e,r,B.board,"horizontal")):"submarine"===t.id&&B.board[0][r+2]?(n.target.appendChild(t),B.placeShip(3,"submarine",e,r,B.board,"horizontal")):"destroyer"===t.id&&B.board[0][r+1]&&(n.target.appendChild(t),B.placeShip(2,"destroyer",e,r,B.board,"horizontal")):t.classList.contains("vertical")&&("carrier"===t.id&&B.board[e+4]?(n.target.appendChild(t),B.placeShip(5,"carrier",e,r,B.board,"vertical")):"battleship"===t.id&&B.board[e+3]?(n.target.appendChild(t),B.placeShip(4,"battleship",e,r,B.board,"vertical")):"cruiser"===t.id&&B.board[e+2]?(n.target.appendChild(t),B.placeShip(3,"cruiser",e,r,B.board,"vertical")):"submarine"===t.id&&B.board[e+2]?(n.target.appendChild(t),B.placeShip(3,"submarine",e,r,B.board,"vertical")):"destroyer"===t.id&&B.board[e+1]&&(n.target.appendChild(t),B.placeShip(2,"destroyer",e,r,B.board,"vertical")))}}))}));const v=document.querySelector(".ships");v.addEventListener("dragover",(n=>{n.preventDefault()})),v.addEventListener("drop",(n=>{const e=n.dataTransfer.getData("text/plain"),t=document.getElementById(e);"ships"===n.target.classList.value&&n.target.appendChild(t)})),document.querySelector(".start").addEventListener("click",(()=>{v.children.length||(document.querySelector(".place-ships-modal").style.display="none",B.board.forEach((n=>{n.forEach((e=>{e.length&&(document.getElementById(`player${B.board.indexOf(n)},${n.indexOf(e)}`).style.backgroundColor="rgb(163, 163, 163)")}))})))}));const w=new f;function M(){let n=new b,e=B.board[n.x][n.y],t=document.getElementById(`player${n.x},${n.y}`);if(e.includes("miss")||!e.length||e[0].hit.find((e=>e[0]===n.x&&e[1]===n.y)))if(e.includes("miss")||e.length){let r;for("miss"!==e[0]&&(r=e[0].hit.find((e=>e[0]===n.x&&e[1]===n.y)));e.length&&e.includes("miss")||e.length&&r;)n=new b,console.log(n.x,n.y),e=B.board[n.x][n.y],!e.includes("miss")&&e.length&&(r=e[0].hit.find((e=>e[0]===n.x&&e[1]===n.y)));t=document.getElementById(`player${n.x},${n.y}`),!e.includes("miss")&&e.length?(t.style.backgroundColor="rgb(255, 133, 133)",n.computerRandomAttack(B.board)):e.includes("miss")||e.length||(t.style.backgroundColor="rgb(133, 255, 179)",n.computerRandomAttack(B.board))}else t.style.backgroundColor="rgb(133, 255, 179)",n.computerRandomAttack(B.board);else t.style.backgroundColor="rgb(255, 133, 133)",n.computerRandomAttack(B.board)}function k(n,e,t){const r=document.querySelector(".win"),o=document.querySelector(".modal");let a,i,s,d,l;n[`${[e]}`].forEach((n=>{n.forEach((n=>{n.length&&!n.includes("miss")&&("carrier"===n[0].name&&!0===n[0].isSunk()?a=!0:"battleship"===n[0].name&&!0===n[0].isSunk()?i=!0:"cruiser"===n[0].name&&!0===n[0].isSunk()?s=!0:"submarine"===n[0].name&&!0===n[0].isSunk()?d=!0:"destroyer"===n[0].name&&!0===n[0].isSunk()&&(l=!0))}))})),a&&i&&s&&d&&l&&"block"!==o.style.display&&(r.textContent="player"===t?"You Win":"Computer Wins",o.style.display="block")}w.randomizeComputerBoard(),w.computerBoard.forEach((n=>{n.forEach((e=>{const t=w.computerBoard.indexOf(n),r=n.indexOf(e),o=document.getElementById(`computer${t},${r}`);o.addEventListener("click",(()=>{e.includes("miss")||!e.length||e[0].hit.find((n=>n[0]===t&&n[1]===r))?e.includes("miss")||e.length||(o.style.backgroundColor="rgb(133, 255, 179)",w.reciveAttack(t,r,w.computerBoard),k(w,"computerBoard","player"),M(),k(B,"board","computer")):(o.style.backgroundColor="rgb(255, 133, 133",w.reciveAttack(t,r,w.computerBoard),console.log(w.computerBoard),k(w,"computerBoard","player"),e[0].isSunk()&&w.computerBoard.forEach((n=>{n.forEach((e=>{!e.includes("miss")&&e.length&&e[0].isSunk()&&(document.getElementById(`computer${w.computerBoard.indexOf(n)},${n.indexOf(e)}`).style.backgroundColor="rgb(163, 163, 163)")}))})),M(),k(B,"board","computer"))}))}))})),document.querySelector(".play-again").addEventListener("click",(()=>{location.reload()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,