(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>s});var r=t(537),o=t.n(r),a=t(645),i=t.n(a)()(o());i.push([n.id,'* {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n}\n\n.header {\n    font-size: 35px;\n    color: rgb(51, 50, 50);\n    font-weight: 500;\n    margin-top: 20px;\n    font-family: "Press Start 2P";\n    letter-spacing: -3px;\n}\n\n.wrapper {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 100px;\n}\n\n.game-wrapper {\n    display: flex;\n    gap: 100px;\n}\n\n.x {\n    display: flex;\n}\n\n.y {\n    box-sizing: border-box;\n    border: solid 1px rgb(78, 77, 77);\n    cursor: pointer;\n}\n\n.modal {\n    display: none; \n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%; \n    overflow: auto;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0, 0, 0, 0.616);\n}\n\n.modal-content {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 70px;\n    background-color: #fefefe;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 30%;\n    height: 30%;\n    border-radius: 10px;\n}\n\n.win {\n    font-size: 40px;\n    margin-top: 20px;\n    font-weight: 600;\n}\n\n.play-again {\n    padding: 15px 0px;\n    background-color: black;\n    color: white;\n    font-weight: 600;\n    font-size: 20px;\n    border: none;\n    border-radius: 10px;\n    width: 200px;\n    cursor: pointer;\n}\n\n.play-again:hover {\n    transform: scale(1.05);\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,uBAAuB;AAC3B;;AAEA;IACI,eAAe;IACf,sBAAsB;IACtB,gBAAgB;IAChB,gBAAgB;IAChB,6BAA6B;IAC7B,oBAAoB;AACxB;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,UAAU;AACd;;AAEA;IACI,aAAa;IACb,UAAU;AACd;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,sBAAsB;IACtB,iCAAiC;IACjC,eAAe;AACnB;;AAEA;IACI,aAAa;IACb,eAAe;IACf,UAAU;IACV,OAAO;IACP,MAAM;IACN,WAAW;IACX,YAAY;IACZ,cAAc;IACd,4BAA4B;IAC5B,sCAAsC;AAC1C;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,SAAS;IACT,yBAAyB;IACzB,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,UAAU;IACV,WAAW;IACX,mBAAmB;AACvB;;AAEA;IACI,eAAe;IACf,gBAAgB;IAChB,gBAAgB;AACpB;;AAEA;IACI,iBAAiB;IACjB,uBAAuB;IACvB,YAAY;IACZ,gBAAgB;IAChB,eAAe;IACf,YAAY;IACZ,mBAAmB;IACnB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,sBAAsB;AAC1B",sourcesContent:['* {\n    margin: 0;\n    padding: 0;\n    font-family: sans-serif;\n}\n\n.header {\n    font-size: 35px;\n    color: rgb(51, 50, 50);\n    font-weight: 500;\n    margin-top: 20px;\n    font-family: "Press Start 2P";\n    letter-spacing: -3px;\n}\n\n.wrapper {\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 100px;\n}\n\n.game-wrapper {\n    display: flex;\n    gap: 100px;\n}\n\n.x {\n    display: flex;\n}\n\n.y {\n    box-sizing: border-box;\n    border: solid 1px rgb(78, 77, 77);\n    cursor: pointer;\n}\n\n.modal {\n    display: none; \n    position: fixed;\n    z-index: 1;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%; \n    overflow: auto;\n    background-color: rgb(0,0,0);\n    background-color: rgba(0, 0, 0, 0.616);\n}\n\n.modal-content {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    gap: 70px;\n    background-color: #fefefe;\n    margin: 15% auto;\n    padding: 20px;\n    border: 1px solid #888;\n    width: 30%;\n    height: 30%;\n    border-radius: 10px;\n}\n\n.win {\n    font-size: 40px;\n    margin-top: 20px;\n    font-weight: 600;\n}\n\n.play-again {\n    padding: 15px 0px;\n    background-color: black;\n    color: white;\n    font-weight: 600;\n    font-size: 20px;\n    border: none;\n    border-radius: 10px;\n    width: 200px;\n    cursor: pointer;\n}\n\n.play-again:hover {\n    transform: scale(1.05);\n}'],sourceRoot:""}]);const s=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<n.length;l++){var p=[].concat(n[l]);r&&i[p[0]]||(void 0!==a&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=a),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),o&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=o):p[4]="".concat(o)),e.push(p))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],l=r.base?c[0]+r.base:c[0],p=a[l]||0,d="".concat(l," ").concat(p);a[l]=p+1;var u=t(d),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)e[u].references++,e[u].updater(A);else{var h=o(A,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:h,references:1})}i.push(d)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=r(n,o),l=0;l<a.length;l++){var p=t(a[l]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},380:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(380),o=t.n(r),a=t(569),i=t.n(a),s=t(565),c=t.n(s),l=t(216),p=t.n(l),d=t(589),u=t.n(d),A=t(426),h={};function m(n,e){this.length=n,this.name=e,this.hit=[],this.hitF=(n,e)=>{const t=[n,e];return this.hit.push(t),this.hit},this.isSunk=()=>n===this.hit.length}function f(){const n=[];for(let e=0;e<10;e+=1){const e=[];n.push(e);for(let n=0;n<10;n+=1){const n=[];e.push(n)}}return n}function g(){this.board=f(),this.computerBoard=f(),this.placeShip=(n,e,t,r,o,a)=>{const i=new m(n,e);return"carrier"===e?"horizontal"===a?(o[t][r].push(i),o[t][r+1].push(i),o[t][r+2].push(i),o[t][r+3].push(i),o[t][r+4].push(i)):(o[t][r].push(i),o[t+1][r].push(i),o[t+2][r].push(i),o[t+3][r].push(i),o[t+4][r].push(i)):"battleship"===e?"horizontal"===a?(o[t][r].push(i),o[t][r+1].push(i),o[t][r+2].push(i),o[t][r+3].push(i)):(o[t][r].push(i),o[t+1][r].push(i),o[t+2][r].push(i),o[t+3][r].push(i)):"cruiser"===e||"submarine"===e?"horizontal"===a?(o[t][r].push(i),o[t][r+1].push(i),o[t][r+2].push(i)):(o[t][r].push(i),o[t+1][r].push(i),o[t+2][r].push(i)):"destroyer"===e&&("horizontal"===a?(o[t][r].push(i),o[t][r+1].push(i)):(o[t][r].push(i),o[t+1][r].push(i))),o},this.reciveAttack=(n,e,t)=>(!t[n][e].includes("miss")&&t[n][e].length?t[n][e][0].hitF(n,e):t[n][e].length||t[n][e].push("miss"),t),this.randomizeComputerBoard=()=>{this.placeShip(5,"carrier",1,2,this.computerBoard,"horizontal"),this.placeShip(4,"battleship",4,6,this.computerBoard,"horizontal"),this.placeShip(3,"cruiser",7,2,this.computerBoard,"horizontal"),this.placeShip(3,"submarine",7,6,this.computerBoard,"vertical"),this.placeShip(2,"destroyer",4,1,this.computerBoard,"vertical")}}h.styleTagTransform=u(),h.setAttributes=c(),h.insert=i().bind(null,"head"),h.domAPI=o(),h.insertStyleElement=p(),e()(A.Z,h),A.Z&&A.Z.locals&&A.Z.locals;const b=new g;function y(){this.turn="player",this.x=Math.floor(10*Math.random()),this.y=Math.floor(10*Math.random()),console.log(this.x,this.y),this.computerRandomAttack=n=>{this.turn="computer",b.reciveAttack(this.x,this.y,n)}}function x(n){for(let e=0;e<10;e+=1){const t=document.createElement("div");t.classList.add("x"),t.style.width="350px",t.style.height="35px",document.querySelector(`.${n}`).appendChild(t);for(let r=0;r<10;r+=1){const o=document.createElement("div");o.classList.add("y"),o.classList.add(`${n}`),o.setAttribute("id",`${n}${0+e},${0+r}`),o.style.width="35px",o.style.height="35px",t.appendChild(o)}}}x("player"),x("computer");const C=new g;C.placeShip(5,"carrier",1,2,C.board,"horizontal"),C.placeShip(4,"battleship",4,5,C.board,"horizontal"),C.placeShip(3,"cruiser",7,7,C.board,"horizontal"),C.placeShip(3,"submarine",5,3,C.board,"vertical"),C.placeShip(2,"destroyer",8,5,C.board,"vertical"),C.board.forEach((n=>{n.forEach((e=>{e.length&&(document.getElementById(`player${C.board.indexOf(n)},${n.indexOf(e)}`).style.backgroundColor="rgb(163, 163, 163)")}))}));const B=new g;function I(){let n=new y,e=C.board[n.x][n.y],t=document.getElementById(`player${n.x},${n.y}`);if(e.includes("miss")||!e.length||e[0].hit.find((e=>e.includes(n.x)&&e.includes(n.y))))if(e.includes("miss")||e.length){let r;for("miss"!==e[0]&&(r=e[0].hit.find((e=>e[0]===n.x&&e[1]===n.y)));e.length&&e.includes("miss")||e.length&&r;)n=new y,console.log(n.x,n.y),e=C.board[n.x][n.y],!e.includes("miss")&&e.length&&(r=e[0].hit.find((e=>e[0]===n.x&&e[1]===n.y)),console.log(r));t=document.getElementById(`player${n.x},${n.y}`),!e.includes("miss")&&e.length?(t.style.backgroundColor="rgb(255, 133, 133)",n.computerRandomAttack(C.board)):e.includes("miss")||e.length||(t.style.backgroundColor="rgb(133, 255, 179)",n.computerRandomAttack(C.board))}else t.style.backgroundColor="rgb(133, 255, 179)",n.computerRandomAttack(C.board);else t.style.backgroundColor="rgb(255, 133, 133)",n.computerRandomAttack(C.board)}function v(n,e,t){const r=document.querySelector(".win"),o=document.querySelector(".modal");let a,i,s,c,l;n[`${[e]}`].forEach((n=>{n.forEach((n=>{n.length&&!n.includes("miss")&&("carrier"===n[0].name&&!0===n[0].isSunk()?a=!0:"battleship"===n[0].name&&!0===n[0].isSunk()?i=!0:"cruiser"===n[0].name&&!0===n[0].isSunk()?s=!0:"submarine"===n[0].name&&!0===n[0].isSunk()?c=!0:"destroyer"===n[0].name&&!0===n[0].isSunk()&&(l=!0))}))})),a&&i&&s&&c&&l&&"block"!==o.style.display&&(r.textContent="player"===t?"You Win":"Computer Wins",o.style.display="block")}B.randomizeComputerBoard(),B.computerBoard.forEach((n=>{n.forEach((e=>{e.length&&(document.getElementById(`computer${B.computerBoard.indexOf(n)},${n.indexOf(e)}`).style.backgroundColor="rgb(163, 163, 163)");const t=B.computerBoard.indexOf(n),r=n.indexOf(e),o=document.getElementById(`computer${t},${r}`);o.addEventListener("click",(()=>{e.includes("miss")||!e.length||e[0].hit.find((n=>n.includes(t)&&n.includes(r)))?e.includes("miss")||e.length||(o.style.backgroundColor="rgb(133, 255, 179)",B.reciveAttack(t,r,B.computerBoard),v(B,"computerBoard","player"),I(),v(C,"board","computer")):(o.style.backgroundColor="rgb(255, 133, 133",B.reciveAttack(t,r,B.computerBoard),v(B,"computerBoard","player"),e[0].isSunk()&&B.computerBoard.forEach((n=>{n.forEach((e=>{!e.includes("miss")&&e.length&&e[0].isSunk()&&(document.getElementById(`computer${B.computerBoard.indexOf(n)},${n.indexOf(e)}`).style.backgroundColor="rgb(163, 163, 163)")}))})),I(),v(C,"board","computer"))}))}))})),document.querySelector(".play-again").addEventListener("click",(()=>{location.reload()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LHNCQW1CM0JuRixTQUFTQyxjQUFjLGVBRS9CMkcsaUJBQWlCLFNBQVMsS0FFbENHLFNBQVNDLGEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvaGFzT3duUHJvcGVydHkgc2hvcnRoYW5kIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9mYWN0b3JpZXMvc2hpcC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2ZhY3Rvcmllcy9nYW1lYm9hcmQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9mYWN0b3JpZXMvcGxheWVyLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIqIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcXG59XFxuXFxuLmhlYWRlciB7XFxuICAgIGZvbnQtc2l6ZTogMzVweDtcXG4gICAgY29sb3I6IHJnYig1MSwgNTAsIDUwKTtcXG4gICAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gICAgbWFyZ2luLXRvcDogMjBweDtcXG4gICAgZm9udC1mYW1pbHk6IFxcXCJQcmVzcyBTdGFydCAyUFxcXCI7XFxuICAgIGxldHRlci1zcGFjaW5nOiAtM3B4O1xcbn1cXG5cXG4ud3JhcHBlciB7XFxuICAgIGhlaWdodDogMTAwdmg7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMTAwcHg7XFxufVxcblxcbi5nYW1lLXdyYXBwZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDEwMHB4O1xcbn1cXG5cXG4ueCB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxufVxcblxcbi55IHtcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gICAgYm9yZGVyOiBzb2xpZCAxcHggcmdiKDc4LCA3NywgNzcpO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5tb2RhbCB7XFxuICAgIGRpc3BsYXk6IG5vbmU7IFxcbiAgICBwb3NpdGlvbjogZml4ZWQ7XFxuICAgIHotaW5kZXg6IDE7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHRvcDogMDtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwJTsgXFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwwLDApO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNjE2KTtcXG59XFxuXFxuLm1vZGFsLWNvbnRlbnQge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDcwcHg7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZWZlZmU7XFxuICAgIG1hcmdpbjogMTUlIGF1dG87XFxuICAgIHBhZGRpbmc6IDIwcHg7XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7XFxuICAgIHdpZHRoOiAzMCU7XFxuICAgIGhlaWdodDogMzAlO1xcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xcbn1cXG5cXG4ud2luIHtcXG4gICAgZm9udC1zaXplOiA0MHB4O1xcbiAgICBtYXJnaW4tdG9wOiAyMHB4O1xcbiAgICBmb250LXdlaWdodDogNjAwO1xcbn1cXG5cXG4ucGxheS1hZ2FpbiB7XFxuICAgIHBhZGRpbmc6IDE1cHggMHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcXG4gICAgY29sb3I6IHdoaXRlO1xcbiAgICBmb250LXdlaWdodDogNjAwO1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG4gICAgd2lkdGg6IDIwMHB4O1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi5wbGF5LWFnYWluOmhvdmVyIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcXG59XCIsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLFNBQVM7SUFDVCxVQUFVO0lBQ1YsdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLHNCQUFzQjtJQUN0QixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLDZCQUE2QjtJQUM3QixvQkFBb0I7QUFDeEI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsYUFBYTtJQUNiLHNCQUFzQjtJQUN0QixtQkFBbUI7SUFDbkIsVUFBVTtBQUNkOztBQUVBO0lBQ0ksYUFBYTtJQUNiLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGFBQWE7QUFDakI7O0FBRUE7SUFDSSxzQkFBc0I7SUFDdEIsaUNBQWlDO0lBQ2pDLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsZUFBZTtJQUNmLFVBQVU7SUFDVixPQUFPO0lBQ1AsTUFBTTtJQUNOLFdBQVc7SUFDWCxZQUFZO0lBQ1osY0FBYztJQUNkLDRCQUE0QjtJQUM1QixzQ0FBc0M7QUFDMUM7O0FBRUE7SUFDSSxhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLHNCQUFzQjtJQUN0QixTQUFTO0lBQ1QseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFVBQVU7SUFDVixXQUFXO0lBQ1gsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGdCQUFnQjtJQUNoQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsdUJBQXVCO0lBQ3ZCLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxzQkFBc0I7QUFDMUJcIixcInNvdXJjZXNDb250ZW50XCI6W1wiKiB7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgcGFkZGluZzogMDtcXG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XFxufVxcblxcbi5oZWFkZXIge1xcbiAgICBmb250LXNpemU6IDM1cHg7XFxuICAgIGNvbG9yOiByZ2IoNTEsIDUwLCA1MCk7XFxuICAgIGZvbnQtd2VpZ2h0OiA1MDA7XFxuICAgIG1hcmdpbi10b3A6IDIwcHg7XFxuICAgIGZvbnQtZmFtaWx5OiBcXFwiUHJlc3MgU3RhcnQgMlBcXFwiO1xcbiAgICBsZXR0ZXItc3BhY2luZzogLTNweDtcXG59XFxuXFxuLndyYXBwZXIge1xcbiAgICBoZWlnaHQ6IDEwMHZoO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDEwMHB4O1xcbn1cXG5cXG4uZ2FtZS13cmFwcGVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAxMDBweDtcXG59XFxuXFxuLngge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4ueSB7XFxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxuICAgIGJvcmRlcjogc29saWQgMXB4IHJnYig3OCwgNzcsIDc3KTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ubW9kYWwge1xcbiAgICBkaXNwbGF5OiBub25lOyBcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICB6LWluZGV4OiAxO1xcbiAgICBsZWZ0OiAwO1xcbiAgICB0b3A6IDA7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IDEwMCU7IFxcbiAgICBvdmVyZmxvdzogYXV0bztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsMCwwKTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjYxNik7XFxufVxcblxcbi5tb2RhbC1jb250ZW50IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiA3MHB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmVmZWZlO1xcbiAgICBtYXJnaW46IDE1JSBhdXRvO1xcbiAgICBwYWRkaW5nOiAyMHB4O1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjODg4O1xcbiAgICB3aWR0aDogMzAlO1xcbiAgICBoZWlnaHQ6IDMwJTtcXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcXG59XFxuXFxuLndpbiB7XFxuICAgIGZvbnQtc2l6ZTogNDBweDtcXG4gICAgbWFyZ2luLXRvcDogMjBweDtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuXFxuLnBsYXktYWdhaW4ge1xcbiAgICBwYWRkaW5nOiAxNXB4IDBweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XFxuICAgIGNvbG9yOiB3aGl0ZTtcXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICAgIHdpZHRoOiAyMDBweDtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ucGxheS1hZ2Fpbjpob3ZlciB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0ZW0pIHtcbiAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdO1xuICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XG5cbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgdmFyIHNvdXJjZVVSTHMgPSBjc3NNYXBwaW5nLnNvdXJjZXMubWFwKGZ1bmN0aW9uIChzb3VyY2UpIHtcbiAgICAgIHJldHVybiBcIi8qIyBzb3VyY2VVUkw9XCIuY29uY2F0KGNzc01hcHBpbmcuc291cmNlUm9vdCB8fCBcIlwiKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG5cbiAgcmV0dXJuIFtjb250ZW50XS5qb2luKFwiXFxuXCIpO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIHN0eWxlc0luRE9NID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuXG4gICAgaWYgKGluZGV4QnlJZGVudGlmaWVyICE9PSAtMSkge1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnJlZmVyZW5jZXMrKztcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS51cGRhdGVyKG9iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciB1cGRhdGVyID0gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucyk7XG4gICAgICBvcHRpb25zLmJ5SW5kZXggPSBpO1xuICAgICAgc3R5bGVzSW5ET00uc3BsaWNlKGksIDAsIHtcbiAgICAgICAgaWRlbnRpZmllcjogaWRlbnRpZmllcixcbiAgICAgICAgdXBkYXRlcjogdXBkYXRlcixcbiAgICAgICAgcmVmZXJlbmNlczogMVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuXG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cblxuZnVuY3Rpb24gYWRkRWxlbWVudFN0eWxlKG9iaiwgb3B0aW9ucykge1xuICB2YXIgYXBpID0gb3B0aW9ucy5kb21BUEkob3B0aW9ucyk7XG4gIGFwaS51cGRhdGUob2JqKTtcblxuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG5cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gdXBkYXRlcjtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cblxuICAgIHZhciBuZXdMYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obmV3TGlzdCwgb3B0aW9ucyk7XG5cbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcblxuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcblxuICAgICAgaWYgKHN0eWxlc0luRE9NW19pbmRleF0ucmVmZXJlbmNlcyA9PT0gMCkge1xuICAgICAgICBzdHlsZXNJbkRPTVtfaW5kZXhdLnVwZGF0ZXIoKTtcblxuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7IC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuXG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cblxuICByZXR1cm4gbWVtb1t0YXJnZXRdO1xufVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5cblxuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcblxuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cblxuICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG5cbiAgaWYgKG5vbmNlKSB7XG4gICAgc3R5bGVFbGVtZW50LnNldEF0dHJpYnV0ZShcIm5vbmNlXCIsIG5vbmNlKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcblxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuXG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJAbWVkaWEgXCIuY29uY2F0KG9iai5tZWRpYSwgXCIge1wiKTtcbiAgfVxuXG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cblxuICBjc3MgKz0gb2JqLmNzcztcblxuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHN0eWxlRWxlbWVudC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudCk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuXG4gICAgc3R5bGVFbGVtZW50LmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcykpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2hpcChsZW5ndGgsIG5hbWUpIHtcbiAgdGhpcy5sZW5ndGggPSBsZW5ndGg7XG4gIHRoaXMubmFtZSA9IG5hbWU7XG4gIHRoaXMuaGl0ID0gW107XG4gIHRoaXMuaGl0RiA9ICh4LCB5KSA9PiB7XG4gICAgY29uc3QgaGl0UG9zaXRpb24gPSBbeCwgeV07XG4gICAgdGhpcy5oaXQucHVzaChoaXRQb3NpdGlvbik7XG4gICAgcmV0dXJuIHRoaXMuaGl0O1xuICB9O1xuICB0aGlzLmlzU3VuayA9ICgpID0+IHtcbiAgICBpZiAobGVuZ3RoID09PSB0aGlzLmhpdC5sZW5ndGgpIHtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH07XG59XG4iLCJpbXBvcnQgU2hpcCBmcm9tIFwiLi9zaGlwXCI7XG5cbmZ1bmN0aW9uIGNyZWF0ZUJvYXJkKCkge1xuICBjb25zdCBib2FyZCA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpICs9IDEpIHtcbiAgICBjb25zdCB4ID0gW107XG4gICAgYm9hcmQucHVzaCh4KTtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IDEwOyBqICs9IDEpIHtcbiAgICAgIGNvbnN0IHkgPSBbXTtcbiAgICAgIHgucHVzaCh5KTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIGJvYXJkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBHYW1lQm9hcmQoKSB7XG4gIHRoaXMuYm9hcmQgPSBjcmVhdGVCb2FyZCgpO1xuICB0aGlzLmNvbXB1dGVyQm9hcmQgPSBjcmVhdGVCb2FyZCgpO1xuICB0aGlzLnBsYWNlU2hpcCA9IChsZW5ndGgsIG5hbWUsIHgsIHksIGJvYXJkLCBkaXJlY3Rpb24pID0+IHtcbiAgICBjb25zdCBzaGlwID0gbmV3IFNoaXAobGVuZ3RoLCBuYW1lKTtcbiAgICBpZiAobmFtZSA9PT0gXCJjYXJyaWVyXCIpIHtcbiAgICAgIGlmIChkaXJlY3Rpb24gPT09IFwiaG9yaXpvbnRhbFwiKSB7XG4gICAgICAgIGJvYXJkW3hdW3ldLnB1c2goc2hpcCk7XG4gICAgICAgIGJvYXJkW3hdW3kgKyAxXS5wdXNoKHNoaXApO1xuICAgICAgICBib2FyZFt4XVt5ICsgMl0ucHVzaChzaGlwKTtcbiAgICAgICAgYm9hcmRbeF1beSArIDNdLnB1c2goc2hpcCk7XG4gICAgICAgIGJvYXJkW3hdW3kgKyA0XS5wdXNoKHNoaXApO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYm9hcmRbeF1beV0ucHVzaChzaGlwKTtcbiAgICAgICAgYm9hcmRbeCArIDFdW3ldLnB1c2goc2hpcCk7XG4gICAgICAgIGJvYXJkW3ggKyAyXVt5XS5wdXNoKHNoaXApO1xuICAgICAgICBib2FyZFt4ICsgM11beV0ucHVzaChzaGlwKTtcbiAgICAgICAgYm9hcmRbeCArIDRdW3ldLnB1c2goc2hpcCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChuYW1lID09PSBcImJhdHRsZXNoaXBcIikge1xuICAgICAgaWYgKGRpcmVjdGlvbiA9PT0gXCJob3Jpem9udGFsXCIpIHtcbiAgICAgICAgYm9hcmRbeF1beV0ucHVzaChzaGlwKTtcbiAgICAgICAgYm9hcmRbeF1beSArIDFdLnB1c2goc2hpcCk7XG4gICAgICAgIGJvYXJkW3hdW3kgKyAyXS5wdXNoKHNoaXApO1xuICAgICAgICBib2FyZFt4XVt5ICsgM10ucHVzaChzaGlwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJvYXJkW3hdW3ldLnB1c2goc2hpcCk7XG4gICAgICAgIGJvYXJkW3ggKyAxXVt5XS5wdXNoKHNoaXApO1xuICAgICAgICBib2FyZFt4ICsgMl1beV0ucHVzaChzaGlwKTtcbiAgICAgICAgYm9hcmRbeCArIDNdW3ldLnB1c2goc2hpcCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChuYW1lID09PSBcImNydWlzZXJcIiB8fCBuYW1lID09PSBcInN1Ym1hcmluZVwiKSB7XG4gICAgICBpZiAoZGlyZWN0aW9uID09PSBcImhvcml6b250YWxcIikge1xuICAgICAgICBib2FyZFt4XVt5XS5wdXNoKHNoaXApO1xuICAgICAgICBib2FyZFt4XVt5ICsgMV0ucHVzaChzaGlwKTtcbiAgICAgICAgYm9hcmRbeF1beSArIDJdLnB1c2goc2hpcCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBib2FyZFt4XVt5XS5wdXNoKHNoaXApO1xuICAgICAgICBib2FyZFt4ICsgMV1beV0ucHVzaChzaGlwKTtcbiAgICAgICAgYm9hcmRbeCArIDJdW3ldLnB1c2goc2hpcCk7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChuYW1lID09PSBcImRlc3Ryb3llclwiKSB7XG4gICAgICBpZiAoZGlyZWN0aW9uID09PSBcImhvcml6b250YWxcIikge1xuICAgICAgICBib2FyZFt4XVt5XS5wdXNoKHNoaXApO1xuICAgICAgICBib2FyZFt4XVt5ICsgMV0ucHVzaChzaGlwKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGJvYXJkW3hdW3ldLnB1c2goc2hpcCk7XG4gICAgICAgIGJvYXJkW3ggKyAxXVt5XS5wdXNoKHNoaXApO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYm9hcmQ7XG4gIH07XG4gIHRoaXMucmVjaXZlQXR0YWNrID0gKHgsIHksIGJvYXJkKSA9PiB7XG4gICAgLy8gY2hlY2tzIGlmIHNoaXAgaXMgdGhlcmVcbiAgICBpZiAoIWJvYXJkW3hdW3ldLmluY2x1ZGVzKFwibWlzc1wiKSAmJiBib2FyZFt4XVt5XS5sZW5ndGgpIHtcbiAgICAgIGJvYXJkW3hdW3ldWzBdLmhpdEYoeCwgeSk7XG4gICAgICAvLyBjaGVja3MgaWYgcG9zaXRpb24gaXMgZW1wdHlcbiAgICB9IGVsc2UgaWYgKCFib2FyZFt4XVt5XS5sZW5ndGgpIHtcbiAgICAgIGJvYXJkW3hdW3ldLnB1c2goXCJtaXNzXCIpO1xuICAgIH1cbiAgICByZXR1cm4gYm9hcmQ7XG4gIH07XG4gIHRoaXMucmFuZG9taXplQ29tcHV0ZXJCb2FyZCA9ICgpID0+IHtcbiAgICB0aGlzLnBsYWNlU2hpcCg1LCBcImNhcnJpZXJcIiwgMSwgMiwgdGhpcy5jb21wdXRlckJvYXJkLCBcImhvcml6b250YWxcIik7XG4gICAgdGhpcy5wbGFjZVNoaXAoNCwgXCJiYXR0bGVzaGlwXCIsIDQsIDYsIHRoaXMuY29tcHV0ZXJCb2FyZCwgXCJob3Jpem9udGFsXCIpO1xuICAgIHRoaXMucGxhY2VTaGlwKDMsIFwiY3J1aXNlclwiLCA3LCAyLCB0aGlzLmNvbXB1dGVyQm9hcmQsIFwiaG9yaXpvbnRhbFwiKTtcbiAgICB0aGlzLnBsYWNlU2hpcCgzLCBcInN1Ym1hcmluZVwiLCA3LCA2LCB0aGlzLmNvbXB1dGVyQm9hcmQsIFwidmVydGljYWxcIik7XG4gICAgdGhpcy5wbGFjZVNoaXAoMiwgXCJkZXN0cm95ZXJcIiwgNCwgMSwgdGhpcy5jb21wdXRlckJvYXJkLCBcInZlcnRpY2FsXCIpO1xuICB9O1xufVxuIiwiaW1wb3J0IEdhbWVCb2FyZCBmcm9tIFwiLi9nYW1lYm9hcmRcIjtcblxuY29uc3QgZ2FtZWJvYXJkID0gbmV3IEdhbWVCb2FyZCgpO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQbGF5ZXIoKSB7XG4gIHRoaXMudHVybiA9IFwicGxheWVyXCI7XG4gIHRoaXMueCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKTtcbiAgdGhpcy55ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTApO1xuICBjb25zb2xlLmxvZyh0aGlzLngsIHRoaXMueSk7XG4gIHRoaXMuY29tcHV0ZXJSYW5kb21BdHRhY2sgPSAoYm9hcmQpID0+IHtcbiAgICB0aGlzLnR1cm4gPSBcImNvbXB1dGVyXCI7XG4gICAgZ2FtZWJvYXJkLnJlY2l2ZUF0dGFjayh0aGlzLngsIHRoaXMueSwgYm9hcmQpO1xuICB9O1xufVxuIiwiaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcbmltcG9ydCBHYW1lQm9hcmQgZnJvbSBcIi4vZmFjdG9yaWVzL2dhbWVib2FyZFwiO1xuaW1wb3J0IFBsYXllciBmcm9tIFwiLi9mYWN0b3JpZXMvcGxheWVyXCI7XG5cbmZ1bmN0aW9uIHJlbmRlckdhbWVCb2FyZChwbGF5ZXIpIHtcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDsgaSArPSAxKSB7XG4gICAgY29uc3QgeCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgeC5jbGFzc0xpc3QuYWRkKFwieFwiKTtcbiAgICB4LnN0eWxlLndpZHRoID0gXCIzNTBweFwiO1xuICAgIHguc3R5bGUuaGVpZ2h0ID0gXCIzNXB4XCI7XG4gICAgY29uc3QgYm9hcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAuJHtwbGF5ZXJ9YCk7XG4gICAgYm9hcmQuYXBwZW5kQ2hpbGQoeCk7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCAxMDsgaiArPSAxKSB7XG4gICAgICBjb25zdCB5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgIHkuY2xhc3NMaXN0LmFkZChcInlcIik7XG4gICAgICB5LmNsYXNzTGlzdC5hZGQoYCR7cGxheWVyfWApO1xuICAgICAgeS5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBgJHtwbGF5ZXJ9JHswICsgaX0sJHswICsgan1gKTtcbiAgICAgIHkuc3R5bGUud2lkdGggPSBcIjM1cHhcIjtcbiAgICAgIHkuc3R5bGUuaGVpZ2h0ID0gXCIzNXB4XCI7XG4gICAgICB4LmFwcGVuZENoaWxkKHkpO1xuICAgIH1cbiAgfVxufVxuXG4vLyBjcmVhdGUgYm9hcmRzXG5yZW5kZXJHYW1lQm9hcmQoXCJwbGF5ZXJcIik7XG5yZW5kZXJHYW1lQm9hcmQoXCJjb21wdXRlclwiKTtcblxuY29uc3QgcGxheWVyR2FtZWJvYXJkID0gbmV3IEdhbWVCb2FyZCgpO1xuLy8gcGxhY2Ugc2hpcHMgb24gcGxheWVyIGJvYXJkXG5wbGF5ZXJHYW1lYm9hcmQucGxhY2VTaGlwKDUsIFwiY2FycmllclwiLCAxLCAyLCBwbGF5ZXJHYW1lYm9hcmQuYm9hcmQsIFwiaG9yaXpvbnRhbFwiKTtcbnBsYXllckdhbWVib2FyZC5wbGFjZVNoaXAoNCwgXCJiYXR0bGVzaGlwXCIsIDQsIDUsIHBsYXllckdhbWVib2FyZC5ib2FyZCwgXCJob3Jpem9udGFsXCIpO1xucGxheWVyR2FtZWJvYXJkLnBsYWNlU2hpcCgzLCBcImNydWlzZXJcIiwgNywgNywgcGxheWVyR2FtZWJvYXJkLmJvYXJkLCBcImhvcml6b250YWxcIik7XG5wbGF5ZXJHYW1lYm9hcmQucGxhY2VTaGlwKDMsIFwic3VibWFyaW5lXCIsIDUsIDMsIHBsYXllckdhbWVib2FyZC5ib2FyZCwgXCJ2ZXJ0aWNhbFwiKTtcbnBsYXllckdhbWVib2FyZC5wbGFjZVNoaXAoMiwgXCJkZXN0cm95ZXJcIiwgOCwgNSwgcGxheWVyR2FtZWJvYXJkLmJvYXJkLCBcInZlcnRpY2FsXCIpO1xuLy8gY29sb3IgZWFjaCBzaGlwIGdyYXlcbnBsYXllckdhbWVib2FyZC5ib2FyZC5mb3JFYWNoKCh4KSA9PiB7XG4gIHguZm9yRWFjaCgoeSkgPT4ge1xuICAgIGlmICh5Lmxlbmd0aCkge1xuICAgICAgY29uc3Qgc2hpcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBwbGF5ZXIke3BsYXllckdhbWVib2FyZC5ib2FyZC5pbmRleE9mKHgpfSwke3guaW5kZXhPZih5KX1gKTtcbiAgICAgIHNoaXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMTYzLCAxNjMsIDE2MylcIjtcbiAgICB9XG4gIH0pO1xufSk7XG5cbi8vIGF0dGFja2luZyBjb21wdXRlciBib2FyZFxuY29uc3QgY29tcHV0ZXJHYW1lYm9hcmQgPSBuZXcgR2FtZUJvYXJkKCk7XG5jb21wdXRlckdhbWVib2FyZC5yYW5kb21pemVDb21wdXRlckJvYXJkKCk7XG5cbmZ1bmN0aW9uIGNvbXB1dGVyQXR0YWNrKCkge1xuICBsZXQgcGxheWVyID0gbmV3IFBsYXllcigpO1xuXG4gIGxldCBwbGF5ZXJTcXVhcmUgPSBwbGF5ZXJHYW1lYm9hcmQuYm9hcmRbcGxheWVyLnhdW3BsYXllci55XTtcbiAgbGV0IHBsYXllckRvbVNxdWFyZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBwbGF5ZXIke3BsYXllci54fSwke3BsYXllci55fWApO1xuICAvLyBpZiBpdHMgc2hpcCBhbmQgc2hpcCBpc250IGhpdFxuICBpZiAoIXBsYXllclNxdWFyZS5pbmNsdWRlcyhcIm1pc3NcIikgJiYgcGxheWVyU3F1YXJlLmxlbmd0aCAmJiAhcGxheWVyU3F1YXJlWzBdLmhpdC5maW5kKChoaXRGKSA9PiBoaXRGLmluY2x1ZGVzKHBsYXllci54KSAmJiBoaXRGLmluY2x1ZGVzKHBsYXllci55KSkpIHtcbiAgICBwbGF5ZXJEb21TcXVhcmUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMjU1LCAxMzMsIDEzMylcIjtcbiAgICBwbGF5ZXIuY29tcHV0ZXJSYW5kb21BdHRhY2socGxheWVyR2FtZWJvYXJkLmJvYXJkKTtcbiAgICAvLyBpZiBpdHMgZW10cHR5XG4gIH0gZWxzZSBpZiAoIXBsYXllclNxdWFyZS5pbmNsdWRlcyhcIm1pc3NcIikgJiYgIXBsYXllclNxdWFyZS5sZW5ndGgpIHtcbiAgICBwbGF5ZXJEb21TcXVhcmUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMTMzLCAyNTUsIDE3OSlcIjtcbiAgICBwbGF5ZXIuY29tcHV0ZXJSYW5kb21BdHRhY2socGxheWVyR2FtZWJvYXJkLmJvYXJkKTtcbiAgICAvLyBpZiBzcXVhcmUgaGFzIG1pc3MgaW4gaXQgb3Igc2hpcCBpcyBoaXRcbiAgfSBlbHNlIHtcbiAgICBsZXQgZXhwcmVzc2lvbjtcbiAgICAvLyBpZiBpdHMgc2hpcCwgZXhwcmVzc2lvbiB0byBwYXNzIGluIHdoaWxlIGxvb3AucmV0dXJucyBhcnJheSBpZiBzaGlwIGlzIGhpdCBhbmQgd29udCBwYXNzIGxvb3BcbiAgICBpZiAocGxheWVyU3F1YXJlWzBdICE9PSBcIm1pc3NcIikge1xuICAgICAgZXhwcmVzc2lvbiA9IHBsYXllclNxdWFyZVswXS5oaXQuZmluZCgoaGl0RikgPT4gaGl0RlswXSA9PT0gcGxheWVyLnhcbiAgICAgICYmIGhpdEZbMV0gPT09IHBsYXllci55KTtcbiAgICB9XG4gICAgLy8gaWYgaXRzIG5vdCBlbXB0eSBhbmQgaGFzIG1pc3MgaW4gaXQgb3Igc2hpcCBpcyBoaXQgd2lsbCBnZW5lcmF0ZSBuZXcgY29vcmRpbmF0ZXNcbiAgICB3aGlsZSAoKHBsYXllclNxdWFyZS5sZW5ndGggJiYgcGxheWVyU3F1YXJlLmluY2x1ZGVzKFwibWlzc1wiKSkgfHwgKHBsYXllclNxdWFyZS5sZW5ndGggJiYgZXhwcmVzc2lvbikpIHtcbiAgICAgIC8vIG5ldyBjb29yZGluYXRlc1xuICAgICAgcGxheWVyID0gbmV3IFBsYXllcigpO1xuICAgICAgY29uc29sZS5sb2cocGxheWVyLngsIHBsYXllci55KTtcbiAgICAgIHBsYXllclNxdWFyZSA9IHBsYXllckdhbWVib2FyZC5ib2FyZFtwbGF5ZXIueF1bcGxheWVyLnldO1xuICAgICAgLy8gdXBkYXRlIGV4cHJlc3Npb24gZm9yIGxvb3AgdG8gY2hlY2sgYWdhaW5cbiAgICAgIGlmICghcGxheWVyU3F1YXJlLmluY2x1ZGVzKFwibWlzc1wiKSAmJiBwbGF5ZXJTcXVhcmUubGVuZ3RoKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1sb29wLWZ1bmNcbiAgICAgICAgZXhwcmVzc2lvbiA9IHBsYXllclNxdWFyZVswXS5oaXQuZmluZCgoaGl0RikgPT4gaGl0RlswXSA9PT0gcGxheWVyLnhcbiAgICAgICYmIGhpdEZbMV0gPT09IHBsYXllci55KTtcbiAgICAgICAgY29uc29sZS5sb2coZXhwcmVzc2lvbilcbiAgICAgIH1cbiAgICB9XG4gICAgcGxheWVyRG9tU3F1YXJlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYHBsYXllciR7cGxheWVyLnh9LCR7cGxheWVyLnl9YCk7XG4gICAgLy8gY2hhbmdlIGNvbG9yIHRvIHJlZCBpZiBpdHMgc2hpcFxuICAgIGlmICghcGxheWVyU3F1YXJlLmluY2x1ZGVzKFwibWlzc1wiKSAmJiBwbGF5ZXJTcXVhcmUubGVuZ3RoKSB7XG4gICAgICBwbGF5ZXJEb21TcXVhcmUuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMjU1LCAxMzMsIDEzMylcIjtcbiAgICAgIHBsYXllci5jb21wdXRlclJhbmRvbUF0dGFjayhwbGF5ZXJHYW1lYm9hcmQuYm9hcmQpO1xuICAgIC8vIGNoYW5nZSBjb2xvciB0byBncmVlbiBpZiBpdHMgbWlzc2VkXG4gICAgfSBlbHNlIGlmICghcGxheWVyU3F1YXJlLmluY2x1ZGVzKFwibWlzc1wiKSAmJiAhcGxheWVyU3F1YXJlLmxlbmd0aCkge1xuICAgICAgcGxheWVyRG9tU3F1YXJlLnN0eWxlLmJhY2tncm91bmRDb2xvciA9IFwicmdiKDEzMywgMjU1LCAxNzkpXCI7XG4gICAgICBwbGF5ZXIuY29tcHV0ZXJSYW5kb21BdHRhY2socGxheWVyR2FtZWJvYXJkLmJvYXJkKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gaXNHYW1lT3ZlcihnYW1lYm9hcmQsIHNvbWVCb2FyZCwgcGxheWVyKSB7XG4gIGNvbnN0IHdpbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIud2luXCIpO1xuICBjb25zdCBtb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxcIik7XG4gIGxldCBjYXJyaWVySXNTdW5rO1xuICBsZXQgYmF0dGxlc2hpcElzU3VuaztcbiAgbGV0IGNydWlzZXJJc1N1bms7XG4gIGxldCBzdWJtYXJpbmVJc1N1bms7XG4gIGxldCBkZXN0cm95ZXJJc1N1bms7XG4gIGNvbnN0IGJvYXJkID0gYCR7W3NvbWVCb2FyZF19YDtcbiAgZ2FtZWJvYXJkW2JvYXJkXS5mb3JFYWNoKChyb3cpID0+IHtcbiAgICByb3cuZm9yRWFjaCgoc3F1YXJlKSA9PiB7XG4gICAgICBpZiAoc3F1YXJlLmxlbmd0aCAmJiAhc3F1YXJlLmluY2x1ZGVzKFwibWlzc1wiKSkge1xuICAgICAgICBpZiAoc3F1YXJlWzBdLm5hbWUgPT09IFwiY2FycmllclwiICYmIHNxdWFyZVswXS5pc1N1bmsoKSA9PT0gdHJ1ZSkge1xuICAgICAgICAgIGNhcnJpZXJJc1N1bmsgPSB0cnVlO1xuICAgICAgICB9IGVsc2UgaWYgKHNxdWFyZVswXS5uYW1lID09PSBcImJhdHRsZXNoaXBcIiAmJiBzcXVhcmVbMF0uaXNTdW5rKCkgPT09IHRydWUpIHtcbiAgICAgICAgICBiYXR0bGVzaGlwSXNTdW5rID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmIChzcXVhcmVbMF0ubmFtZSA9PT0gXCJjcnVpc2VyXCIgJiYgc3F1YXJlWzBdLmlzU3VuaygpID09PSB0cnVlKSB7XG4gICAgICAgICAgY3J1aXNlcklzU3VuayA9IHRydWU7XG4gICAgICAgIH0gZWxzZSBpZiAoc3F1YXJlWzBdLm5hbWUgPT09IFwic3VibWFyaW5lXCIgJiYgc3F1YXJlWzBdLmlzU3VuaygpID09PSB0cnVlKSB7XG4gICAgICAgICAgc3VibWFyaW5lSXNTdW5rID0gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIGlmIChzcXVhcmVbMF0ubmFtZSA9PT0gXCJkZXN0cm95ZXJcIiAmJiBzcXVhcmVbMF0uaXNTdW5rKCkgPT09IHRydWUpIHtcbiAgICAgICAgICBkZXN0cm95ZXJJc1N1bmsgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG4gIH0pO1xuICBpZiAoY2FycmllcklzU3VuayAmJiBiYXR0bGVzaGlwSXNTdW5rICYmIGNydWlzZXJJc1N1bmsgJiYgc3VibWFyaW5lSXNTdW5rICYmIGRlc3Ryb3llcklzU3VuayAmJiBtb2RhbC5zdHlsZS5kaXNwbGF5ICE9PSBcImJsb2NrXCIpIHtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLWV4cHJlc3Npb25zXG4gICAgcGxheWVyID09PSBcInBsYXllclwiID8gd2luLnRleHRDb250ZW50ID0gXCJZb3UgV2luXCIgOiB3aW4udGV4dENvbnRlbnQgPSBcIkNvbXB1dGVyIFdpbnNcIjtcbiAgICBtb2RhbC5zdHlsZS5kaXNwbGF5ID0gXCJibG9ja1wiO1xuICB9XG59XG5cbmNvbXB1dGVyR2FtZWJvYXJkLmNvbXB1dGVyQm9hcmQuZm9yRWFjaCgocm93KSA9PiB7XG4gIHJvdy5mb3JFYWNoKChzcXVhcmUpID0+IHtcbiAgICAvLyBkZWxldGUgbGF0ZXIsIGNvbG9ycyBlYWNoIHNoaXAgZ3JheSBmb3IgbWUgdG9vIHNlZSBhbmQgZGVidWcgbW9yZSBlYXNpbHlcbiAgICBpZiAoc3F1YXJlLmxlbmd0aCkge1xuICAgICAgY29uc3Qgc2hpcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBjb21wdXRlciR7Y29tcHV0ZXJHYW1lYm9hcmQuY29tcHV0ZXJCb2FyZC5pbmRleE9mKHJvdyl9LCR7cm93LmluZGV4T2Yoc3F1YXJlKX1gKTtcbiAgICAgIHNoaXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMTYzLCAxNjMsIDE2MylcIjtcbiAgICB9XG4gICAgY29uc3QgeCA9IGNvbXB1dGVyR2FtZWJvYXJkLmNvbXB1dGVyQm9hcmQuaW5kZXhPZihyb3cpO1xuICAgIGNvbnN0IHkgPSByb3cuaW5kZXhPZihzcXVhcmUpO1xuICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBjb21wdXRlciR7eH0sJHt5fWApO1xuICAgIGRpdi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgLy8gcGxheWVyIGF0dGFja1xuICAgICAgLy8gY2hlY2sgaWYgc3F1YXJlIGlzIGhpdCBhbHJlYWR5IGFuZCBtaXNzZWQsIGNoZWNrIGlmIHNoaXAgaXMgdGhlcmUgYW5kIGNoZWNrIGlmIHNoaXAgaXMgaGl0XG4gICAgICBpZiAoIXNxdWFyZS5pbmNsdWRlcyhcIm1pc3NcIikgJiYgc3F1YXJlLmxlbmd0aCAmJiAhc3F1YXJlWzBdLmhpdC5maW5kKChoaXRGKSA9PiBoaXRGLmluY2x1ZGVzKHgpICYmIGhpdEYuaW5jbHVkZXMoeSkpKSB7XG4gICAgICAgIGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBcInJnYigyNTUsIDEzMywgMTMzXCI7XG4gICAgICAgIGNvbXB1dGVyR2FtZWJvYXJkLnJlY2l2ZUF0dGFjayh4LCB5LCBjb21wdXRlckdhbWVib2FyZC5jb21wdXRlckJvYXJkKTtcblxuICAgICAgICBpc0dhbWVPdmVyKGNvbXB1dGVyR2FtZWJvYXJkLCBcImNvbXB1dGVyQm9hcmRcIiwgXCJwbGF5ZXJcIik7XG5cbiAgICAgICAgLy8gY2hhbmdlcyBzaGlwIGNvbG9yIHRvIGdyYXkgaWYgaXQncyBzdW5rXG4gICAgICAgIGlmIChzcXVhcmVbMF0uaXNTdW5rKCkpIHtcbiAgICAgICAgICAvLyBzZWFyY2ggZm9yIHNoaXAncyBvdGhlciBzcXVhcmVzIHRvIGNoYW5nZSBjb2xvci4gc3F1YXJlWzBdIG9ubHkgdGFyZ2V0cyBvbmUgc3F1YXJlXG4gICAgICAgICAgY29tcHV0ZXJHYW1lYm9hcmQuY29tcHV0ZXJCb2FyZC5mb3JFYWNoKCh4Um93KSA9PiB7XG4gICAgICAgICAgICB4Um93LmZvckVhY2goKHlTcXVhcmUpID0+IHtcbiAgICAgICAgICAgICAgLy8gY2hlY2sgaWYgc3F1YXJlIGhhcyBzaGlwXG4gICAgICAgICAgICAgIGlmICgheVNxdWFyZS5pbmNsdWRlcyhcIm1pc3NcIikgJiYgeVNxdWFyZS5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAvLyBjaGVjayBpZiBzaGlwIGlzIHN1bmtcbiAgICAgICAgICAgICAgICBpZiAoeVNxdWFyZVswXS5pc1N1bmsoKSkge1xuICAgICAgICAgICAgICAgICAgY29uc3Qgc2hpcCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGBjb21wdXRlciR7Y29tcHV0ZXJHYW1lYm9hcmQuY29tcHV0ZXJCb2FyZC5pbmRleE9mKHhSb3cpfSwke3hSb3cuaW5kZXhPZih5U3F1YXJlKX1gKTtcbiAgICAgICAgICAgICAgICAgIHNoaXAuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMTYzLCAxNjMsIDE2MylcIjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIC8vIGNvbXB1dGVyIGF0dGFjayByaWdodCBhZnRlciB1c2VyIGF0dGFja3NcbiAgICAgICAgY29tcHV0ZXJBdHRhY2soKTtcblxuICAgICAgICBpc0dhbWVPdmVyKHBsYXllckdhbWVib2FyZCwgXCJib2FyZFwiLCBcImNvbXB1dGVyXCIpO1xuXG4gICAgICAgIC8vIGNoZWNrIGlmIHNxdWFyZSB3YXNudCBoaXQgYW5kIG1pc3NlZCBhbmQgaWYgc2hpcCBpc250IHRoZXJlXG4gICAgICB9IGVsc2UgaWYgKCFzcXVhcmUuaW5jbHVkZXMoXCJtaXNzXCIpICYmICFzcXVhcmUubGVuZ3RoKSB7XG4gICAgICAgIC8vIGNoYW5nZSBjb2xvciB0byBncmVlblxuICAgICAgICBkaXYuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gXCJyZ2IoMTMzLCAyNTUsIDE3OSlcIjtcbiAgICAgICAgY29tcHV0ZXJHYW1lYm9hcmQucmVjaXZlQXR0YWNrKHgsIHksIGNvbXB1dGVyR2FtZWJvYXJkLmNvbXB1dGVyQm9hcmQpO1xuXG4gICAgICAgIGlzR2FtZU92ZXIoY29tcHV0ZXJHYW1lYm9hcmQsIFwiY29tcHV0ZXJCb2FyZFwiLCBcInBsYXllclwiKTtcblxuICAgICAgICAvLyBjb21wdXRlciBhdHRhY2sgcmlnaHQgYWZ0ZXIgdXNlciBhdHRhY2tzXG4gICAgICAgIGNvbXB1dGVyQXR0YWNrKCk7XG5cbiAgICAgICAgaXNHYW1lT3ZlcihwbGF5ZXJHYW1lYm9hcmQsIFwiYm9hcmRcIiwgXCJjb21wdXRlclwiKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59KTtcblxuY29uc3QgcGxheUFnYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wbGF5LWFnYWluXCIpO1xuXG5wbGF5QWdhaW4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXJlc3RyaWN0ZWQtZ2xvYmFsc1xuICBsb2NhdGlvbi5yZWxvYWQoKTtcbn0pO1xuXG4vLyBjb25zdCBhcnJheSA9IFtbNywgOF0sIFs3LCA3XV07XG5cbi8vIGNvbnNvbGUubG9nKGFycmF5LmZpbmQoKGhpdEYpID0+IGhpdEYuaW5jbHVkZXMoNykgJiYgaGl0Ri5pbmNsdWRlcyg3KSkpO1xuIl0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwib3B0aW9ucyIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsIlNoaXAiLCJuYW1lIiwiaGl0IiwiaGl0RiIsIngiLCJ5IiwiaGl0UG9zaXRpb24iLCJpc1N1bmsiLCJjcmVhdGVCb2FyZCIsImJvYXJkIiwiaiIsIkdhbWVCb2FyZCIsImNvbXB1dGVyQm9hcmQiLCJwbGFjZVNoaXAiLCJkaXJlY3Rpb24iLCJzaGlwIiwicmVjaXZlQXR0YWNrIiwiaW5jbHVkZXMiLCJyYW5kb21pemVDb21wdXRlckJvYXJkIiwiZ2FtZWJvYXJkIiwiUGxheWVyIiwidHVybiIsIk1hdGgiLCJmbG9vciIsInJhbmRvbSIsImNvbnNvbGUiLCJsb2ciLCJjb21wdXRlclJhbmRvbUF0dGFjayIsInJlbmRlckdhbWVCb2FyZCIsInBsYXllciIsImNsYXNzTGlzdCIsImFkZCIsIndpZHRoIiwiaGVpZ2h0IiwicGxheWVyR2FtZWJvYXJkIiwiZm9yRWFjaCIsImdldEVsZW1lbnRCeUlkIiwiaW5kZXhPZiIsImJhY2tncm91bmRDb2xvciIsImNvbXB1dGVyR2FtZWJvYXJkIiwiY29tcHV0ZXJBdHRhY2siLCJwbGF5ZXJTcXVhcmUiLCJwbGF5ZXJEb21TcXVhcmUiLCJmaW5kIiwiZXhwcmVzc2lvbiIsImlzR2FtZU92ZXIiLCJzb21lQm9hcmQiLCJ3aW4iLCJtb2RhbCIsImNhcnJpZXJJc1N1bmsiLCJiYXR0bGVzaGlwSXNTdW5rIiwiY3J1aXNlcklzU3VuayIsInN1Ym1hcmluZUlzU3VuayIsImRlc3Ryb3llcklzU3VuayIsInJvdyIsInNxdWFyZSIsImRpc3BsYXkiLCJ0ZXh0Q29udGVudCIsImRpdiIsImFkZEV2ZW50TGlzdGVuZXIiLCJ4Um93IiwieVNxdWFyZSIsImxvY2F0aW9uIiwicmVsb2FkIl0sInNvdXJjZVJvb3QiOiIifQ==